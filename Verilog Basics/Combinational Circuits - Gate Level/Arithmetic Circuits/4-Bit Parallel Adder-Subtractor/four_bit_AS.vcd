$date
	Thu Jun 12 23:16:57 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_four_bit_AS $end
$var wire 4 ! s [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module uut $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 1 ( i $end
$var wire 1 ) j $end
$var wire 1 * k $end
$var wire 1 + l $end
$var wire 4 , s [3:0] $end
$var wire 1 " cout $end
$var wire 1 - c2 $end
$var wire 1 . c1 $end
$var wire 1 / c0 $end
$scope module FA0 $end
$var wire 1 0 a $end
$var wire 1 ( b $end
$var wire 1 % c $end
$var wire 1 / carry $end
$var wire 1 1 i $end
$var wire 1 2 j $end
$var wire 1 3 k $end
$var wire 1 4 sum $end
$upscope $end
$scope module FA1 $end
$var wire 1 5 a $end
$var wire 1 ) b $end
$var wire 1 / c $end
$var wire 1 . carry $end
$var wire 1 6 i $end
$var wire 1 7 j $end
$var wire 1 8 k $end
$var wire 1 9 sum $end
$upscope $end
$scope module FA2 $end
$var wire 1 : a $end
$var wire 1 * b $end
$var wire 1 . c $end
$var wire 1 - carry $end
$var wire 1 ; i $end
$var wire 1 < j $end
$var wire 1 = k $end
$var wire 1 > sum $end
$upscope $end
$scope module FA3 $end
$var wire 1 ? a $end
$var wire 1 + b $end
$var wire 1 - c $end
$var wire 1 " carry $end
$var wire 1 @ i $end
$var wire 1 A j $end
$var wire 1 B k $end
$var wire 1 C sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0C
0B
0A
0@
0?
1>
0=
0<
0;
0:
09
18
07
16
15
04
03
12
01
10
1/
1.
0-
b100 ,
0+
0*
0)
1(
b1 '
b11 &
0%
b1 $
b11 #
0"
b100 !
$end
#10000
1C
08
1-
06
17
14
0/
b1001 !
b1001 ,
0>
1=
1)
11
02
1;
00
1:
b11 $
b11 '
b110 #
b110 &
#20000
0C
0-
1>
0=
19
0.
1"
1/
07
1A
0)
1*
1+
b110 !
b110 ,
04
13
05
0:
1?
1%
b10 $
b10 '
b1000 #
b1000 &
#30000
1=
1/
1.
1B
04
13
09
18
0>
1-
b0 !
b0 ,
0C
1"
0(
0*
11
02
16
1;
0<
1@
0A
10
15
1:
0?
b111 $
b111 '
b111 #
b111 &
#40000
0"
1C
0B
14
03
0.
0-
01
12
19
08
b1111 !
b1111 ,
1>
0=
1(
1*
06
1;
05
0:
b10 $
b10 '
b1 #
b1 &
#50000
